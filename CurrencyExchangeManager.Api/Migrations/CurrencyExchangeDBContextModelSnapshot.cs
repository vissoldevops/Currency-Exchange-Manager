// <auto-generated />
using System;
using CurrencyExchangeManager.Api.Data.DBContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CurrencyExchangeManager.Api.Migrations
{
    [DbContext(typeof(CurrencyExchangeDBContext))]
    partial class CurrencyExchangeDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CurrencyExchangeManager.Api.Models.CurrencyRate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CurrencyCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CurrencyRateHistoryId")
                        .HasColumnType("int");

                    b.Property<double>("ExchangeRate")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("CurrencyRateHistoryId");

                    b.ToTable("CurrencyRates");
                });

            modelBuilder.Entity("CurrencyExchangeManager.Api.Models.CurrencyRateHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BaseCurrency")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("CurrencyRateHistory");
                });

            modelBuilder.Entity("CurrencyExchangeManager.Api.Models.CurrencyRate", b =>
                {
                    b.HasOne("CurrencyExchangeManager.Api.Models.CurrencyRateHistory", null)
                        .WithMany("CurrencyRates")
                        .HasForeignKey("CurrencyRateHistoryId");
                });

            modelBuilder.Entity("CurrencyExchangeManager.Api.Models.CurrencyRateHistory", b =>
                {
                    b.Navigation("CurrencyRates");
                });
#pragma warning restore 612, 618
        }
    }
}
